apply plugin: 'com.android.library'

def cfg = rootProject.ext.android
def supportLibs = rootProject.ext.supportDependencies

android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion cfg.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion

        ndk {
            abiFilters "armeabi-v7a"
        }

        externalNativeBuild {
            ndkBuild {
                //指定 Application.mk 的路径
                arguments "NDK_APPLICATION_MK:=src/main/jni/Application.mk"
                //指定生成哪些平台的 so 文件
                abiFilters "armeabi-v7a"
                //cFlags 和 cppFlags 是用来设置环境变量的, 一般不需要动
//                cFlags "-DTEST_C_FLAG1", "-DTEST_C_FLAG2"
//                cppFlags "-DTEST_CPP_FLAG2", "-DTEST_CPP_FLAG2"
            }
        }


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jni.srcDirs = []//禁用as自动生成mk
        jniLibs.srcDir 'src/main/libs'
    }

    externalNativeBuild {
        ndkBuild {
            //指定 Android.mk 的路径
            path "src/main/jni/Android.mk"
        }
    }



}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
}
